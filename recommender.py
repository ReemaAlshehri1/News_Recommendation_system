# -*- coding: utf-8 -*-
"""recommender.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1g9-5y6h5DyvoS2y91nITsZXWuNWiZFCX
"""

import json, re, pickle
import pandas as pd
from sentence_transformers import SentenceTransformer
from sklearn.metrics.pairwise import cosine_similarity

model = SentenceTransformer('all-MiniLM-L6-v2')
df = pd.read_csv('data/news_preprocessed.csv')
with open('data/news_embeddings.pkl', 'rb') as f:
    embeddings = pickle.load(f)
with open('data/news_keywords.pkl', 'rb') as f:
    news_keywords = pickle.load(f)

DATA_FILE = 'user_data.json'

def load_user_data():
    with open(DATA_FILE, 'r') as f:
        return json.load(f)

def save_user_data(data):
    with open(DATA_FILE, 'w') as f:
        json.dump(data, f)

def clean_user_input(text):
    text = text.lower()
    text = re.sub(r'[^a-zA-Z0-9\s]', '', text)
    text = re.sub(r'\s+', ' ', text)
    return text.strip()

def recommend_content_based(user_input, top_k=5):
    user_embedding = model.encode([user_input])
    similarities = cosine_similarity(user_embedding, embeddings)[0]
    df_filtered = df[df['content'].notna() & (df['content'].str.len() > 50)]
    top_indices = similarities.argsort()[-top_k:][::-1]
    return df_filtered.iloc[top_indices][['subcategory', 'content']].to_dict(orient='records')

def recommend_keyword_based(user_input, top_k=5):
    input_lower = user_input.lower()
    scores = [sum(1 for kw in kws if kw.lower() in input_lower) for kws in news_keywords]
    top_indices = sorted(range(len(scores)), key=lambda i: scores[i], reverse=True)[:top_k]
    df_filtered = df[df['content'].notna() & (df['content'].str.len() > 50)]
    return df_filtered.iloc[top_indices][['subcategory', 'content']].to_dict(orient='records')